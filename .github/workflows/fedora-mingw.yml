name: fedora-mingw
on: [release, workflow_dispatch]
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - prefix: mingw64
            triple: x86_64-w64-mingw32
          - prefix: ucrt64
            triple: x86_64-w64-mingw32ucrt
    container: fedora:41
    steps:
      - name: Install dependencies
        run: |
          sudo dnf upgrade --refresh -y
          sudo dnf install -y ${{matrix.prefix}}-gcc ${{matrix.prefix}}-openssl clang autoconf automake make wine git
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: autogen.sh
        working-directory: ./ObjFW
        run: ./autogen.sh
      - name: configure
        working-directory: ./ObjFW
        run: |
          export BUILD_DIR=$(pwd)/ObjFW-${{matrix.prefix}}-${{matrix.triple}}
          mkdir -p $BUILD_DIR
          ./configure --host=${{matrix.triple}} OBJC="clang -target ${{matrix.triple}}" --prefix=$BUILD_DIR --disable-static
      - name: make
        working-directory: ./ObjFW
        run: make -j$(nproc)
      - name: make check
        working-directory: ./ObjFW
        run: WINEPATH=/usr/${{matrix.triple}}/sys-root/mingw/bin WINEPREFIX=/tmp/wineprefix make check
      - name: make install
        working-directory: ./ObjFW
        run: sudo make install
      - name: tar ObjFW-${{matrix.prefix}}-${{matrix.triple}}.tar.xz ./ObjFW/ObjFW-${{matrix.prefix}}-${{matrix.triple}}
        run: |
          export BUILD_DIR=$(pwd)/ObjFW/ObjFW-${{matrix.prefix}}-${{matrix.triple}}
          cp ./ObjFW/COPYING $BUILD_DIR
          cp ./ObjFW/COPYING.LESSER $BUILD_DIR
          cp ./ObjFW/README.md $BUILD_DIR
          cp ./ObjFW/ChangeLog $BUILD_DIR
          tar -cJf ObjFW-${{matrix.prefix}}-${{matrix.triple}}.tar.xz $BUILD_DIR
      - uses: actions/upload-artifact@v4
        with:
          name: ObjFW-${{matrix.prefix}}-${{matrix.triple}}
          path: ./ObjFW-${{matrix.prefix}}-${{matrix.triple}}.tar.xz
      #now for static
      - name: configure static
        working-directory: ./ObjFW
        run: |
          export BUILD_DIR=$(pwd)/ObjFW-${{matrix.prefix}}-${{matrix.triple}}-static
          mkdir -p $BUILD_DIR
          ./configure --host=${{matrix.triple}} OBJC="clang -target ${{matrix.triple}}" --prefix=$BUILD_DIR --disable-shared --enable-static
      - name: make static
        working-directory: ./ObjFW
        run: make -j$(nproc)
      - name: make install static
        working-directory: ./ObjFW
        run: sudo make install
      - name: tar ObjFW-${{matrix.prefix}}-${{matrix.triple}}-static.tar.xz ./ObjFW/ObjFW-${{matrix.prefix}}-${{matrix.triple}}-static
        run: |
          export BUILD_DIR=$(pwd)/ObjFW/ObjFW-${{matrix.prefix}}-${{matrix.triple}}-static
          cp ./ObjFW/COPYING $BUILD_DIR
          cp ./ObjFW/COPYING.LESSER $BUILD_DIR
          cp ./ObjFW/README.md $BUILD_DIR
          cp ./ObjFW/ChangeLog $BUILD_DIR
          tar -cJf ObjFW-${{matrix.prefix}}-${{matrix.triple}}-static.tar.xz $BUILD_DIR
      - uses: actions/upload-artifact@v4
        with:
          name: ObjFW-${{matrix.prefix}}-${{matrix.triple}}-static
          path: ./ObjFW-${{matrix.prefix}}-${{matrix.triple}}-static.tar.xz
